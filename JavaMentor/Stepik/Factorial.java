/*
 –†–µ–∞–ª–∏–∑—É–π—Ç–µ –º–µ—Ç–æ–¥, –≤—ã—á–∏—Å–ª—è—é—â–∏–π —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–≥–æ —á–∏—Å–ª–∞.

–§–∞–∫—Ç–æ—Ä–∏–∞–ª ùëÅ –≤—ã—á–∏—Å–ª—è–µ—Ç—Å—è –∫–∞–∫ 1‚ãÖ2‚ãÖ...‚ãÖùëÅ.

–ü–æ—Å–∫–æ–ª—å–∫—É —ç—Ç–æ –æ—á–µ–Ω—å –±—ã—Å—Ç—Ä–æ —Ä–∞—Å—Ç—É—â–∞—è —Ñ—É–Ω–∫—Ü–∏—è, —Ç–æ –¥–∞–∂–µ –¥–ª—è –Ω–µ–±–æ–ª—å—à–∏—Ö ùëÅ –≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Ç–∏–ø–æ–≤ int –∏ long –æ—á–µ–Ω—å —Å–∫–æ—Ä–æ –Ω–µ —Ö–≤–∞—Ç–∏—Ç.
 –ü–æ—ç—Ç–æ–º—É –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å BigInteger. –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–º —à–∞–±–ª–æ–Ω–æ–º. –î–µ–∫–ª–∞—Ä–∞—Ü–∏—é –∫–ª–∞—Å—Å–∞, –º–µ—Ç–æ–¥ main –∏
 –æ–±—Ä–∞–±–æ—Ç–∫—É –≤–≤–æ–¥–∞-–≤—ã–≤–æ–¥–∞ –¥–æ–±–∞–≤–∏—Ç –ø—Ä–æ–≤–µ—Ä—è—é—â–∞—è —Å–∏—Å—Ç–µ–º–∞.
*/


package JavaMentor.Stepik;

import java.math.BigInteger;

public class Factorial {
    public static void main(String[] args) {
        System.out.println(factorial(3));
    }

    public static BigInteger factorial(int value) {

        BigInteger a = BigInteger.ONE;

        if(value < 0){
            System.out.println("–ò–∑ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–≥–æ —á–∏—Å–ª–∞ —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª –Ω–µ –≤—ã—á–∏—Å–ª—è—é—Ç.");
            return null;
        }
        if(value == 0) {
            return a;
        }
        return value == 1? BigInteger.valueOf(value): BigInteger.valueOf(value).multiply(factorial(value - 1));
    }
}


//        BigInteger a = BigInteger.ONE;
//
//        for (int i = 1; i <= value; i++) {
//            a = a.multiply(BigInteger.valueOf(i));
//        }
//        return a;